<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2008, Health XCEL Inc.. All Rights Reserved.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:tool="http://www.springframework.org/schema/tool"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd
                           http://www.springframework.org/schema/jee
                           http://www.springframework.org/schema/jee/spring-jee.xsd
                           http://www.springframework.org/schema/lang
                           http://www.springframework.org/schema/lang/spring-lang.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/tool
                           http://www.springframework.org/schema/tool/spring-tool.xsd">

    <!-- Hibernate types -->
    <bean id="hibernateStringEncryptor" class="org.jasypt.hibernate.encryptor.HibernatePBEStringEncryptor">
        <property name="registeredName" value="hibernateStringEncryptor"/>
        <property name="encryptor" ref="stringEncryptor"/>
    </bean>

    <bean id="hibernateByteEncryptor" class="org.jasypt.hibernate.encryptor.HibernatePBEByteEncryptor">
        <property name="registeredName" value="hibernateByteEncryptor"/>
        <property name="encryptor" ref="byteEncryptor"/>
    </bean>

    <bean id="hibernateIntegerEncryptor" class="org.jasypt.hibernate.encryptor.HibernatePBEBigIntegerEncryptor">
        <property name="registeredName" value="hibernateByteEncryptor"/>
        <property name="encryptor" ref="bigIntegerEncryptor"/>
    </bean>

    <bean id="hibernateBigDecimalEncryptor" class="org.jasypt.hibernate.encryptor.HibernatePBEBigDecimalEncryptor">
        <property name="registeredName" value="hibernateByteEncryptor"/>
        <property name="encryptor" ref="bigDecimalEncryptor"/>
    </bean>

    <!-- encryptors -->
    <!-- this is our string encryptor for all string values in db -->
    <bean id="stringEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
        <property name="config" ref="envPBEConfig"/>
    </bean>

    <!-- For binary content -->
    <bean id="byteEncryptor" class="org.jasypt.encryption.pbe.StandardPBEByteEncryptor">
        <property name="config" ref="envPBEConfig"/>
    </bean>

    <!-- For integers -->
    <bean id="bigIntegerEncryptor" class="org.jasypt.encryption.pbe.StandardPBEBigIntegerEncryptor">
        <property name="config" ref="envPBEConfig"/>
    </bean>

    <!-- for bigdecimals -->
    <bean id="bigDecimalEncryptor" class="org.jasypt.encryption.pbe.StandardPBEBigDecimalEncryptor">
        <property name="config" ref="envPBEConfig"/>
    </bean>

    <bean id="passwordEncryptor" class="org.jasypt.util.password.StrongPasswordEncryptor"/>

    <!-- Default provider -->
    <bean id="encryptionProvider" class="org.bouncycastle.jce.provider.BouncyCastleProvider"/>

    <!-- environment pbe config -->
    <!-- This is the only bean where we cannot set values using the property placeholder as the place holder
    uses this bean via the stringEncryptor -->
    <bean id="envPBEConfig" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
        <property name="provider" ref="encryptionProvider"/>
        <property name="algorithm" value="PBEWITHSHA-256AND256BITAES-CBC-BC"/>
        <property name="passwordEnvName" value="APP_ENCRYPTION_PASSWORD"/>
        <property name="keyObtentionIterations" value="10000"/>
        <property name="saltGenerator">
            <bean class="org.jasypt.salt.RandomSaltGenerator"/>
        </property>
    </bean>
</beans>
